main { end } until while f - Hola" repeat , == else > > until - { ] <= ! "Hola" write ] { -- float c g read { read end while b main */ do } integer : ] repeat then <= + != d , != [ end read a / end = > != { ] f g [ "Hola" : ++ Hola" { do do a % d */ */ + end then > f float >= { g // = / ) : ! > repeat Hola" if d + == then */ bool "Hola ! >= := Hola" a / float bool float // "Hola < -- -- end b ! : float "Hola == /* ) : a then then [ == ( == integer c until % ! main } repeat Hola" a ] : [ g read integer "Hola" Hola" := d "Hola } "Hola" write ] "Hola" while while then , != >= + a while }}
